/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(1)                                                       */
/* BINDTOOL_USE_PYGCCXML(1)                                                        */
/* BINDTOOL_HEADER_FILE(vita49_tcp_msg_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(ab18a598d17112d21df619d014df21a4)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sandia_utils/vita49_tcp_msg_source.h>
// pydoc.h is automatically generated in the build directory
#include <vita49_tcp_msg_source_pydoc.h>

void bind_vita49_tcp_msg_source(py::module& m)
{

    using vita49_tcp_msg_source = ::gr::sandia_utils::vita49_tcp_msg_source;


    py::class_<vita49_tcp_msg_source,
               gr::block,
               gr::basic_block,
               std::shared_ptr<vita49_tcp_msg_source>>(
        m, "vita49_tcp_msg_source", D(vita49_tcp_msg_source))

        .def(py::init(&vita49_tcp_msg_source::make),
             py::arg("port"),
             py::arg("socket_always_on") = false,
             D(vita49_tcp_msg_source, make))


        .def("setIgnoreTime",
             &vita49_tcp_msg_source::setIgnoreTime,
             py::arg("val") = false,
             D(vita49_tcp_msg_source, setIgnoreTime))


        .def("getIgnoreTime",
             &vita49_tcp_msg_source::getIgnoreTime,
             D(vita49_tcp_msg_source, getIgnoreTime))


        .def("setIgnoreTune",
             &vita49_tcp_msg_source::setIgnoreTune,
             py::arg("val") = false,
             D(vita49_tcp_msg_source, setIgnoreTune))


        .def("getIgnoreTune",
             &vita49_tcp_msg_source::getIgnoreTune,
             D(vita49_tcp_msg_source, getIgnoreTune))


        .def("closeSocket",
             &vita49_tcp_msg_source::closeSocket,
             D(vita49_tcp_msg_source, closeSocket))

        ;
}
