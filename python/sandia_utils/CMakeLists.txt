# Copyright 2011 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-sandia_utils
#
# SPDX-License-Identifier: GPL-3.0-or-later

# ##############################################################################
# Include python install macros
# ##############################################################################
include(GrPython)
if(NOT PYTHONINTERP_FOUND)
  return()
endif()

add_subdirectory(bindings)

# ##############################################################################
# Install python sources
# ##############################################################################
GR_PYTHON_INSTALL(
  FILES
  __init__.py
  file_monitor.py
  max_every_n.py
  message_file_debug.py
  python_interface_sink.py
  python_message_interface.py
  # uhd_timed_cordic_emulator.py # waiting on timing utils...
  file_archiver.py
  csv_writer.py
  csv_reader.py
  rftap_encap.py
  message_vector_csv_pdu.py
  tune_gate.py
  DESTINATION
  ${GR_PYTHON_DIR}/gnuradio/sandia_utils)

# ##############################################################################
# Handle the unit tests
# ##############################################################################
include(GrTest)

set(GR_TEST_TARGET_DEPS gnuradio-sandia_utils)

# Create a package directory that tests can import. It includes everything
# from `python/`.
add_custom_target(
  copy_module_for_tests ALL
  COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}
          ${CMAKE_BINARY_DIR}/test_modules/gnuradio/sandia_utils/
)

gr_add_test(qa_block_buffer ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_block_buffer.py)
gr_add_test(qa_file_archiver ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_file_archiver.py)
gr_add_test(qa_file_monitor ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_file_monitor.py)
gr_add_test(qa_csv_writer ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_csv_writer.py)
gr_add_test(qa_csv_reader ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_csv_reader.py)
gr_add_test(qa_file_sink ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_file_sink.py)
gr_add_test(qa_invert_tune ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_invert_tune.py)
gr_add_test(qa_file_source ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_file_source.py)
gr_add_test(qa_message_file_debug ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_message_file_debug.py)
gr_add_test(qa_message_vector_file_sink ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_message_vector_file_sink.py)
gr_add_test(qa_message_vector_raster_file_sink ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_message_vector_raster_file_sink.py)
gr_add_test(qa_rftap_encap ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_rftap_encap.py)
gr_add_test(qa_stream_gate ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_stream_gate.py)
gr_add_test(qa_tag_debug_file ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_tag_debug_file.py)
gr_add_test(qa_sandia_tag_debug ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_sandia_tag_debug.py)
gr_add_test(qa_tagged_bits_to_bytes ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_tagged_bits_to_bytes.py)
gr_add_test(qa_compute_stats ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_compute_stats.py)
gr_add_test(qa_burst_power_detector ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_burst_power_detector.py)
gr_add_test(qa_constants ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_constants.py)
gr_add_test(qa_message_vector_csv_pdu ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/qa_message_vector_csv_pdu.py)
GR_ADD_TEST(qa_tune_gate ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_tune_gate.py)
