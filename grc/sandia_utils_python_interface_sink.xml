<?xml version="1.0"?>
<block>
  <name>Python Interface Sink</name>
  <key>sandia_utils_python_interface_sink</key>
  <category>[Sandia]/Sandia Utilities</category>
  <import>import sandia_utils</import>
  <make>sandia_utils.python_interface_sink($maxsize, $vec_len)</make>

  <param>
    <name>Queue Size</name>
    <key>maxsize</key>
    <value>100</value>
    <type>int</type>
  </param>
  <param>
    <name>IO Type</name>
    <key>type</key>
    <type>enum</type>
    <option>
      <name>Complex</name>
      <key>complex</key>
    </option>
    <option>
      <name>Float</name>
      <key>float</key>
    </option>
    <option>
      <name>Int</name>
      <key>int</key>
    </option>
    <option>
      <name>Short</name>
      <key>short</key>
    </option>
    <option>
      <name>Byte</name>
      <key>byte</key>
    </option>
  </param>
  <param>
    <name>Vector Length</name>
    <key>vec_len</key>
    <value>1</value>
    <type>int</type>
  </param>

  <sink>
    <name>in</name>
    <type>$type</type>
    <vlen>$vec_len</vlen>
    <optional>1</optional>
  </sink>

  <doc>
Data bridge between the flowgraph and the controlling python script.

This block uses an internal python Queue to hold incoming data. In order to empty the queue, call the get_data() function from the python flowgraph script. Note that if the internal queue fills up, it may halt the rest of the flowgraph.

Inputs:
    in: any input stream

Internal Functions:
    get_data(timeout):
        get the next data sample from the queue (optionally specify timeout in seconds, otherwise it will block)
    flush_data():
        empty the queue
  </doc>
</block>
